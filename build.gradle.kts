/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 */

version = "0.1.0-SNAPSHOT"

plugins {
    // Apply the Kotlin JVM plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.3.41"

    // Apply the java-library plugin to add support for building a CLI application.
    `java-library`
    id("io.gitlab.arturbosch.detekt") version "1.4.0"
    jacoco
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    testImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.3")

    testImplementation("io.mockk:mockk:1.9.3")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")

    //kotlin coroutines
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.3.3")

    //AWS sdk
    implementation("software.amazon.awssdk:sqs:2.10.41")
}

tasks {
    named<Task>("check") {
        dependsOn(named<Task>("jacocoTestReport"))
    }
}

tasks.withType<JacocoReport> {
        reports {
            xml.isEnabled = true
            html.isEnabled = true
            xml.destination = file("$buildDir/reports/jacoco/jacocoTestReport.xml")
            html.destination = file("$buildDir/reports/jacoco")
        }

    classDirectories.setFrom(
        sourceSets.main.get().output.asFileTree.matching {
            exclude("com/thiyagu/reactive/FlowUtilsKt.class")
            exclude("com/thiyagu/reactive/core/MessageListener.class")
            exclude("com/thiyagu/reactive/SqsListener.class")
            exclude("com/thiyagu/reactive/core/MessageHandler.class")
            exclude("com/thiyagu/reactive/domain/*")
        }
    )
}

